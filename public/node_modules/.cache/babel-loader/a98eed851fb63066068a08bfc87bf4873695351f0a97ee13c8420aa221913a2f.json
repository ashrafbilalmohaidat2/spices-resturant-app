{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spices\\\\spices\\\\src\\\\components\\\\CatigoriesList.js\";\nimport React, { lazy, Suspense } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Catigories from \"./Catigories\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CatigoriesItem = /*#__PURE__*/lazy(_c = () => delayForDemo(import('./Catigories.js')));\n_c2 = CatigoriesItem;\nconst CatigoriesList = ({\n  category\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"CategoriesTitle text-center\",\n          children: \"categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 37\n          }, this),\n          children: category && category.length >= 1 ? category.map(cat => {\n            return (\n              /*#__PURE__*/\n              /*<Catigories cat={cat} key={cat.idCategory}/>*/\n              _jsxDEV(CatigoriesItem, {\n                cat: cat\n              }, cat.idCategory, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 33\n              }, this)\n            );\n          }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No Meals Founds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), category && category.length >= 1 ? category.map(cat => {\n          return (\n            /*#__PURE__*/\n            /*<Catigories cat={cat} key={cat.idCategory}/>*/\n            _jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(CatigoriesItem, {\n                cat: cat\n              }, cat.idCategory, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this)\n          );\n        }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Meals Founds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c3 = CatigoriesList;\nfunction delayForDemo(promise) {\n  return new Promise(resolve => {\n    setTimeout(resolve, 2000);\n  }).then(() => promise);\n}\nexport default CatigoriesList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CatigoriesItem$lazy\");\n$RefreshReg$(_c2, \"CatigoriesItem\");\n$RefreshReg$(_c3, \"CatigoriesList\");","map":{"version":3,"names":["React","lazy","Suspense","Container","Row","Catigories","jsxDEV","_jsxDEV","Fragment","_Fragment","CatigoriesItem","_c","delayForDemo","_c2","CatigoriesList","category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","fallback","length","map","cat","idCategory","_c3","promise","Promise","resolve","setTimeout","then","$RefreshReg$"],"sources":["C:/Spices/spices/src/components/CatigoriesList.js"],"sourcesContent":["import React,{lazy, Suspense} from \"react\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport Catigories from \"./Catigories\";\r\n\r\nconst CatigoriesItem = lazy(() => delayForDemo(import('./Catigories.js')));\r\nconst CatigoriesList = ({category}) => {\r\n\r\n    return(\r\n        <>\r\n        <Container>\r\n        <Row className=\"my-3\">\r\n            <h1 className=\"CategoriesTitle text-center\">categories</h1>\r\n            {\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    {\r\n                      (category && category.length >=1) ? (category.map((cat)=>{\r\n                        return(\r\n                            /*<Catigories cat={cat} key={cat.idCategory}/>*/\r\n                                <CatigoriesItem cat={cat} key={cat.idCategory}/>\r\n                        )\r\n                \r\n            })) : <h2>No Meals Founds</h2>\r\n                    }\r\n                </Suspense>\r\n            }\r\n\r\n           {\r\n            (category && category.length >=1) ? (category.map((cat)=>{\r\n                return(\r\n                    /*<Catigories cat={cat} key={cat.idCategory}/>*/\r\n                    <Suspense fallback={<div>Loading...</div>}>\r\n                        <CatigoriesItem cat={cat} key={cat.idCategory}/>\r\n                    </Suspense>\r\n                )\r\n                \r\n            })) : <h2>No Meals Founds</h2>\r\n           }\r\n        </Row>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\nfunction delayForDemo(promise) {\r\n    return new Promise(resolve => {\r\n      setTimeout(resolve, 2000);\r\n    }).then(() => promise);\r\n  }\r\nexport default CatigoriesList;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}