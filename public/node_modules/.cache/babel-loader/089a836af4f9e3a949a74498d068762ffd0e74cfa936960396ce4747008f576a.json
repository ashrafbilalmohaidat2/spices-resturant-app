{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spices\\\\spices\\\\src\\\\components\\\\meals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meals = () => {\n  _s();\n  // Get the category name from the URL parameters using useParams\n  const {\n    categoryName\n  } = useParams();\n\n  // State to store the meals, loading, and error\n  const [meals, setMeals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // useEffect to fetch meals based on the category name from the URL\n  useEffect(() => {\n    // Function to fetch meals by category\n    const fetchMeals = async () => {\n      try {\n        setLoading(true); // Start loading\n        const response = await axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`);\n        setMeals(response.data.meals); // Store the meals in state\n        console.log(response.data.meals);\n      } catch (err) {\n        setError('Error fetching meals'); // Set error if request fails\n      } finally {\n        setLoading(false); // Stop loading after request completes\n      }\n    };\n\n    // Fetch meals when the category changes (via the URL param)\n    fetchMeals();\n  }, [categoryName]); // Effect depends on categoryName\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Meals for \", categoryName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading meals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: meals && meals.map(meal => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: meal.strMeal\n      }, meal.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Meals, \"D5hIymw75EaPpJbtbXyYHYmnnZw=\", false, function () {\n  return [useParams];\n});\n_c = Meals;\nexport default Meals;\nvar _c;\n$RefreshReg$(_c, \"Meals\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","Meals","_s","categoryName","meals","setMeals","loading","setLoading","error","setError","fetchMeals","response","get","data","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","meal","strMeal","idMeal","_c","$RefreshReg$"],"sources":["C:/Spices/spices/src/components/meals.js"],"sourcesContent":["import React,{useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nconst Meals =() =>{\r\n    // Get the category name from the URL parameters using useParams\r\n  const { categoryName } = useParams();\r\n\r\n  // State to store the meals, loading, and error\r\n  const [meals, setMeals] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // useEffect to fetch meals based on the category name from the URL\r\n  useEffect(() => {\r\n    // Function to fetch meals by category\r\n    const fetchMeals = async () => {\r\n      try {\r\n        setLoading(true); // Start loading\r\n        const response = await axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`);\r\n        setMeals(response.data.meals); // Store the meals in state\r\n        console.log(response.data.meals);\r\n      } catch (err) {\r\n        setError('Error fetching meals'); // Set error if request fails\r\n      } finally {\r\n        setLoading(false); // Stop loading after request completes\r\n      }\r\n    };\r\n\r\n    // Fetch meals when the category changes (via the URL param)\r\n    fetchMeals();\r\n  }, [categoryName]); // Effect depends on categoryName\r\n\r\n\r\n    return(\r\n        <div>\r\n        <h1>Meals for {categoryName}</h1>\r\n        {loading && <p>Loading meals...</p>}\r\n        {error && <p>{error}</p>}\r\n        <ul>\r\n          {meals && meals.map(meal => (\r\n            <li key={meal.idMeal}>{meal.strMeal}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Meals;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,KAAK,GAAEA,CAAA,KAAK;EAAAC,EAAA;EACd;EACF,MAAM;IAAEC;EAAa,CAAC,GAAGN,SAAS,CAAC,CAAC;;EAEpC;EACA,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,MAAMI,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wDAAwDT,YAAY,EAAE,CAAC;QACxGE,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAACT,KAAK,CAAC,CAAC,CAAC;QAC/BU,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAACT,KAAK,CAAC;MAClC,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZP,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;MACpC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;;IAED;IACAG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC,CAAC,CAAC;;EAGlB,oBACIH,OAAA;IAAAiB,QAAA,gBACAjB,OAAA;MAAAiB,QAAA,GAAI,YAAU,EAACd,YAAY;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAChCf,OAAO,iBAAIN,OAAA;MAAAiB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAClCb,KAAK,iBAAIR,OAAA;MAAAiB,QAAA,EAAIT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MAAAiB,QAAA,EACGb,KAAK,IAAIA,KAAK,CAACkB,GAAG,CAACC,IAAI,iBACtBvB,OAAA;QAAAiB,QAAA,EAAuBM,IAAI,CAACC;MAAO,GAA1BD,IAAI,CAACE,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAAAnB,EAAA,CA1CKD,KAAK;EAAA,QAEgBJ,SAAS;AAAA;AAAA6B,EAAA,GAF9BzB,KAAK;AA4CX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}