{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spices\\\\spices\\\\src\\\\components\\\\meals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meals = () => {\n  _s();\n  // Get the category name from the URL parameters using useParams\n  const {\n    categoryName\n  } = useParams();\n\n  // State to store the meals, loading, and error\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(null);\n\n  // useEffect to fetch meals based on the category name from the URL\n  useEffect(() => {\n    // Function to fetch meals by category\n    const fetchMeals = async () => {\n      try {\n        //setLoading(true); // Start loading\n        const response = await axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`);\n        setMeals(response.data.meals); // Store the meals in state\n        console.log(response.data.meals);\n      } catch (err) {\n        setError('Error fetching meals'); // Set error if request fails\n      } finally {\n        //setLoading(false); // Stop loading after request completes\n      }\n    };\n\n    // Fetch meals when the category changes (via the URL param)\n    fetchMeals();\n  }, [categoryName]); // Effect depends on categoryName\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"CategoriesTitle text-center\",\n        children: [\"Meals for \", categoryName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), meals.map(meal => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: \"my-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: meal.strMealThumb,\n              className: \"card__image\",\n              alt: \"hu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CardCategor\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-100 p-2\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"CategoryName\",\n                  children: meal.strMeal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }, this)\n        }, meal.idMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Meals, \"HbPt1FJXP4IFansURYMDBf5dBLU=\", false, function () {\n  return [useParams];\n});\n_c = Meals;\nexport default Meals;\nvar _c;\n$RefreshReg$(_c, \"Meals\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Row","Col","Container","axios","jsxDEV","_jsxDEV","Meals","_s","categoryName","meals","setMeals","error","setError","fetchMeals","response","get","data","console","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","meal","xs","sm","md","lg","src","strMealThumb","alt","strMeal","idMeal","_c","$RefreshReg$"],"sources":["C:/Spices/spices/src/components/meals.js"],"sourcesContent":["import React,{useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nconst Meals =() =>{\r\n    // Get the category name from the URL parameters using useParams\r\n  const { categoryName } = useParams();\r\n\r\n  // State to store the meals, loading, and error\r\n  const [meals, setMeals] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // useEffect to fetch meals based on the category name from the URL\r\n  useEffect(() => {\r\n    // Function to fetch meals by category\r\n    const fetchMeals = async () => {\r\n      try {\r\n        //setLoading(true); // Start loading\r\n        const response = await axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`);\r\n        setMeals(response.data.meals); // Store the meals in state\r\n        console.log(response.data.meals);\r\n      } catch (err) {\r\n        setError('Error fetching meals'); // Set error if request fails\r\n      } finally {\r\n        //setLoading(false); // Stop loading after request completes\r\n      }\r\n    };\r\n\r\n    // Fetch meals when the category changes (via the URL param)\r\n    fetchMeals();\r\n  }, [categoryName]); // Effect depends on categoryName\r\n\r\n\r\n    return(\r\n        \r\n        <Container className=\"my-5\" >\r\n          <Row className=\"my-5\">\r\n            <h1 className=\"CategoriesTitle text-center\">Meals for {categoryName}</h1>\r\n                {\r\n                    meals.map((meal) => {\r\n                        return (\r\n                            <Col key={meal.idMeal} xs={6} sm={6} md={4} lg={3} className=\"my-1\">\r\n                                    <div className=\"card\">\r\n                                        <img src={meal.strMealThumb} className=\"card__image\" alt=\"hu\"/>\r\n                                        <div className=\"CardCategor\">\r\n                                            <div className=\"w-100 p-2\">\r\n                                                <p className=\"CategoryName\">{meal.strMeal}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </Col>\r\n                        )\r\n                    })\r\n                }\r\n        </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Meals;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}