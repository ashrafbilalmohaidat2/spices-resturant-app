{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spices\\\\spices\\\\src\\\\components\\\\MealDetailes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealDetailes = () => {\n  _s();\n  const {\n    mealId\n  } = useParams(); // Extract mealId from the URL\n  const [meal, setMeal] = useState(null); // State for storing meal details\n\n  useEffect(() => {\n    const fetchMealDetails = async () => {\n      try {\n        const response = await axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`);\n        console.log('API Response:', response.data); // Log the entire response for debugging\n\n        if (response.data.meals && response.data.meals.length > 0) {\n          setMeal(response.data.meals[0]); // Set the first meal in the state\n        } else {\n          setError('No meal found for this ID'); // Handle if no meal found\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching meal data:', error);\n        setError('An error occurred while fetching meal data');\n        setLoading(false);\n      }\n    };\n    fetchMealDetails(); // Fetch meal details when the component mounts\n  }, [mealId]); // Re-run the effect when mealId changes\n\n  // Conditional rendering based on loading, error, and meal data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading meal details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this), \"  \", meal && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meal.strMealThumb,\n        alt: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: meal.strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(MealDetailes, \"ocJ9wNI75cSslO3KHins8oCZL24=\", false, function () {\n  return [useParams];\n});\n_c = MealDetailes;\nexport default MealDetailes;\nvar _c;\n$RefreshReg$(_c, \"MealDetailes\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","MealDetailes","_s","mealId","meal","setMeal","fetchMealDetails","response","get","console","log","data","meals","length","setError","setLoading","error","children","loading","fileName","_jsxFileName","lineNumber","columnNumber","style","color","strMeal","src","strMealThumb","alt","strInstructions","_c","$RefreshReg$"],"sources":["C:/Spices/spices/src/components/MealDetailes.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nconst MealDetailes = () => {\r\n    const { mealId } = useParams();  // Extract mealId from the URL\r\n    const [meal, setMeal] = useState(null);  // State for storing meal details\r\n  \r\n    useEffect(() => {\r\n      const fetchMealDetails = async () => {\r\n        try {\r\n          const response = await axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`);\r\n  \r\n          console.log('API Response:', response.data);  // Log the entire response for debugging\r\n  \r\n          if (response.data.meals && response.data.meals.length > 0) {\r\n            setMeal(response.data.meals[0]);  // Set the first meal in the state\r\n          } else {\r\n            setError('No meal found for this ID');  // Handle if no meal found\r\n            setLoading(false);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching meal data:', error);\r\n          setError('An error occurred while fetching meal data');\r\n          setLoading(false);\r\n        }\r\n      };\r\n  \r\n      fetchMealDetails();  // Fetch meal details when the component mounts\r\n    }, [mealId]);  // Re-run the effect when mealId changes\r\n  \r\n    // Conditional rendering based on loading, error, and meal data\r\n    return (\r\n      <div>\r\n        {loading && <p>Loading meal details...</p>}\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}  {/* Display any error */}\r\n        {meal && (\r\n          <div>\r\n            <h2>{meal.strMeal}</h2>\r\n            <img src={meal.strMealThumb} alt={meal.strMeal} />\r\n            <p>{meal.strInstructions}</p>\r\n            {/* Add more meal details if necessary */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MealDetailes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAE;EACjC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,wDAAwDL,MAAM,EAAE,CAAC;QAElGM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;;QAE9C,IAAIJ,QAAQ,CAACI,IAAI,CAACC,KAAK,IAAIL,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;UACzDR,OAAO,CAACE,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QACpC,CAAC,MAAM;UACLE,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAE;UACxCC,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDF,QAAQ,CAAC,4CAA4C,CAAC;QACtDC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDT,gBAAgB,CAAC,CAAC,CAAC,CAAE;EACvB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC,CAAC,CAAE;;EAEf;EACA,oBACEH,OAAA;IAAAiB,QAAA,GACGC,OAAO,iBAAIlB,OAAA;MAAAiB,QAAA,EAAG;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACzCN,KAAK,iBAAIhB,OAAA;MAAGuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAED;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,IAAE,EACnDlB,IAAI,iBACHJ,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAKb,IAAI,CAACqB;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBtB,OAAA;QAAK0B,GAAG,EAAEtB,IAAI,CAACuB,YAAa;QAACC,GAAG,EAAExB,IAAI,CAACqB;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDtB,OAAA;QAAAiB,QAAA,EAAIb,IAAI,CAACyB;MAAe;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAApB,EAAA,CA1CKD,YAAY;EAAA,QACKH,SAAS;AAAA;AAAAgC,EAAA,GAD1B7B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}