{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spices\\\\spices\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, lazy } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport CatigoriesList from './components/CatigoriesList';\nimport Meals from './components/meals';\nimport Contact from './components/Contact';\nimport FooterII from './components/FooterII';\nimport { Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MarkdownPreview = /*#__PURE__*/lazy(_c = () => delayForDemo(import('./components/CatigoriesList')));\n_c2 = MarkdownPreview;\nfunction App() {\n  _s();\n  const [category, setCategory] = useState([]);\n\n  //Get All Gategories\n  const getCategory = async () => {\n    const data = await axios.get('https://www.themealdb.com/api/json/v1/1/categories.php');\n    setCategory(data.data.categories);\n  };\n  useEffect(() => {\n    getCategory();\n  }, []);\n  const search = async word => {\n    if (word === \"\") {\n      getCategory();\n    } else {\n      const data = await axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${word}`);\n      setCategory(data.data.meals);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Home, {\n            search: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CatigoriesList, {\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/category/:categoryName\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FooterII, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"a0Gkw7L/pIBVFZ2SGhI61pCkZ9s=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MarkdownPreview$lazy\");\n$RefreshReg$(_c2, \"MarkdownPreview\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","lazy","axios","Header","Home","CatigoriesList","Meals","Contact","FooterII","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","MarkdownPreview","_c","delayForDemo","_c2","App","_s","category","setCategory","getCategory","data","get","categories","search","word","meals","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c3","$RefreshReg$"],"sources":["C:/Spices/spices/src/App.js"],"sourcesContent":["import React, { useEffect, useState,lazy } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport CatigoriesList from './components/CatigoriesList';\nimport Meals from './components/meals';\nimport Contact from './components/Contact';\nimport FooterII from './components/FooterII';\nimport { Route, Routes} from \"react-router-dom\";\n\nconst MarkdownPreview = lazy(() => delayForDemo(import('./components/CatigoriesList')));\n\nfunction App() {\n  const [category, setCategory] = useState([]);\n\n //Get All Gategories\n  const getCategory = async () => {\n    const data = await axios.get('https://www.themealdb.com/api/json/v1/1/categories.php');\n    setCategory(data.data.categories)\n  }\n\n  useEffect(() => {\n    getCategory();\n    },[])\n    const search = async (word) =>{\n      if(word === \"\"){\n        getCategory();\n      }else{\n      const data = await axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${word}`);\n      setCategory(data.data.meals)\n      }\n    }\n  return (\n\n      <>\n        <Header />\n        <Routes>\n  <Route path='/' element={\n    <>\n      <Home search={search} />\n      <CatigoriesList category={category} />\n    </>\n  } />\n\n  <Route path='/category/:categoryName' element={\n    <>\n      <Meals />\n    </>\n  } />\n\n  <Route path='/contact' element={\n    <>\n      <Contact />\n    </>\n  } />\n</Routes>\n\n <FooterII/>\n      </>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}